/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["GCA_Utils"] = factory();
	else
		root["GCA_Utils"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/modules/GCA_Utilities.js":
/*!**************************************!*\
  !*** ./src/modules/GCA_Utilities.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InfoPopup\": () => (/* reexport safe */ _GCA_Utilities_src_GCA_Dialogs_js__WEBPACK_IMPORTED_MODULE_1__.InfoPopup),\n/* harmony export */   \"MessagePopup\": () => (/* reexport safe */ _GCA_Utilities_src_GCA_Dialogs_js__WEBPACK_IMPORTED_MODULE_1__.MessagePopup),\n/* harmony export */   \"ModelPopup\": () => (/* reexport safe */ _GCA_Utilities_src_GCA_Dialogs_js__WEBPACK_IMPORTED_MODULE_1__.ModelPopup),\n/* harmony export */   \"PopupDialog\": () => (/* reexport safe */ _GCA_Utilities_src_GCA_Dialogs_js__WEBPACK_IMPORTED_MODULE_1__.PopupDialog),\n/* harmony export */   \"Sidebar\": () => (/* reexport safe */ _GCA_Utilities_src_GCA_Utilities_js__WEBPACK_IMPORTED_MODULE_0__.Sidebar),\n/* harmony export */   \"Utility\": () => (/* reexport safe */ _GCA_Utilities_src_GCA_Utilities_js__WEBPACK_IMPORTED_MODULE_0__.Utility),\n/* harmony export */   \"capitalizeFirst\": () => (/* reexport safe */ _GCA_Utilities_src_GCA_Utilities_js__WEBPACK_IMPORTED_MODULE_0__.capitalizeFirst),\n/* harmony export */   \"clamp\": () => (/* reexport safe */ _GCA_Utilities_src_GCA_Utilities_js__WEBPACK_IMPORTED_MODULE_0__.clamp),\n/* harmony export */   \"getCurrentScriptPath\": () => (/* reexport safe */ _GCA_Utilities_src_GCA_Utilities_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentScriptPath)\n/* harmony export */ });\n/* harmony import */ var _GCA_Utilities_src_GCA_Utilities_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GCA_Utilities/src/GCA_Utilities.js */ \"./src/modules/GCA_Utilities/src/GCA_Utilities.js\");\n/* harmony import */ var _GCA_Utilities_src_GCA_Dialogs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GCA_Utilities/src/GCA_Dialogs.js */ \"./src/modules/GCA_Utilities/src/GCA_Dialogs.js\");\n\n\n\n//# sourceURL=webpack://GCA_1DViewer/./src/modules/GCA_Utilities.js?");

/***/ }),

/***/ "./src/modules/GCA_Utilities/src/GCA_Dialogs.js":
/*!******************************************************!*\
  !*** ./src/modules/GCA_Utilities/src/GCA_Dialogs.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InfoPopup\": () => (/* binding */ InfoPopup),\n/* harmony export */   \"MessagePopup\": () => (/* binding */ MessagePopup),\n/* harmony export */   \"ModelPopup\": () => (/* binding */ ModelPopup),\n/* harmony export */   \"PopupDialog\": () => (/* binding */ PopupDialog)\n/* harmony export */ });\n/* harmony import */ var _GCA_Utilities_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GCA_Utilities.js */ \"./src/modules/GCA_Utilities/src/GCA_Utilities.js\");\n/**\n * @module MarkerDialog\n * @author Mehran Sharghi\n * @export markerDialog\n * This module conatins a single class MarkerDialog which conatins all the functionality required to display a \n * dialog to add or update a marker in the gut model. The marker is added or updated using the zoom view section. \n */\n\n/*\nif (typeof jQuery === 'undefined') { \n\tawait import('../external/jquery-ui/external/jquery/jquery.js');\n}\nawait import ('../external/jquery-ui/jquery-ui.min.js');\n*/\n\n\n/** @class PopupDialog encapsulating a simple popup dialog based on the JQuery-UI library dialog. It provids a simple way to steup a dialog \n * and methods to show, close, handle clicks, and configure the dialog.\n */\n\nclass PopupDialog {\n  /**\n   * Creates an instance of PopupDialog  \n   *\n   * @constructor\n   * @param {string} dialogName the name of the dialog for internal use in the documnet object model\n   * @param {string} title the display title of the dialog  \n   * @param {string} content content of the dialog in HTML format\n   * @param {object} container container element for the dialog e.g. a DIV\n   * @param {object} config configuration array of key-value pairs as specified by JQuery-UI dialog \n  */\n  constructor(dialogName, title, content, container, config) {\n    this.dialogName = dialogName;\n    let e = _GCA_Utilities_js__WEBPACK_IMPORTED_MODULE_0__.Utility.htmlToElem(`<div id=\"${this.dialogName}-dialog\" title=\"${title}\" tabindex=\"-1\">${content}</div>`);\n    container.appendChild(e);\n\n    if (config) {\n      this.dialog = $(`#${this.dialogName}-dialog`).dialog(config);\n      this.setDialogTitle(title);\n    } else {\n      this.title = title;\n    }\n\n    this.init();\n  }\n\n  configDialog(config, autoclose = true) {\n    // autoclose=true the dialog will close on mouseout, autoclos=number dialog will close on mouseout after delay for number milliseconds\n    this.dialog = $(`#${this.dialogName}-dialog`).dialog(config);\n    this.dialog.on(\"dialogopen\", this.setClickHandler.bind(this));\n\n    if (autoclose) {\n      //\t\tdialog.mouseleave(this.close.bind(this))\n      parent = this.dialog[0].parentNode || this.dialog[0].parentElement;\n\n      if (Number.isInteger(autoclose)) {\n        parent.addEventListener('mouseleave', this.close.bind(this, autoclose));\n      } else {\n        parent.addEventListener('mouseleave', this.close.bind(this));\n      }\n    }\n  }\n\n  setClickHandler() {\n    let widget = this.dialog.dialog(\"widget\")[0];\n    widget.onclick = this.handleClick.bind(this);\n\n    for (let el of $(widget).find('.ui-dialog-titlebar-close')) {\n      el.tabIndex = -1;\n    }\n  }\n\n  handleClick(e) {\n    e.stopPropagation(); // prevent clicks being \t\n  }\n\n  setDialogTitle(title) {\n    this.title = title;\n\n    if (this.dialog) {\n      this.dialog.dialog({\n        title: title\n      });\n    } else {\n      $(`#${this.dialogName}-dialog`).dialog({\n        title: title\n      });\n    }\n  }\n\n  close(delay = 0) {\n    if (delay == 0) {\n      this.dialog.dialog(\"close\");\n    } else {\n      setTimeout(this.close.bind(this, 0), delay);\n    }\n  }\n\n}\n/**************************************************************************\nInformation popup Dialog class\n \n */\n\n\nclass InfoPopup extends PopupDialog {\n  /**\n   * Creates an instance of Info Popup.  \n   *\n   * @constructor\n   */\n  constructor(name, title, content, container) {\n    super(name, title, content, container);\n    this.configDialog({\n      autoOpen: false,\n      hide: \"fade\",\n      show: \"blind\",\n      //\t\t\t\t\t\t\theight: 100,\n      buttons: {\n        Close: this.close.bind(this)\n      }\n    });\n  }\n\n  close() {\n    this.item = null;\n\n    if (this.onclose) {\n      this.onclose();\n      this.onclose = null;\n    }\n\n    this.dialog.dialog(\"close\");\n  }\n\n  open(item, target = null, onclose = null) {\n    this.onclose = onclose;\n\n    if (this.item === item) {\n      this.close();\n      return;\n    }\n\n    this.item = item;\n\n    if (target) {\n      let targetBox = target.getBoundingClientRect();\n      this.dialog.dialog({\n        position: {\n          of: window,\n          my: 'left top',\n          at: `left+${targetBox.left + 1} top+${targetBox.bottom + 1}`,\n          collision: 'fit fit'\n        }\n      });\n    }\n\n    this.showContent(item);\n    this.dialog.dialog(\"open\");\n  }\n\n}\n/**************************************************************************\nMessage popup Dialog class\n \n */\n\n\nclass MessagePopup extends InfoPopup {\n  /**\n   * Creates an instance of Message Popup.  \n   *\n   * @constructor\n   */\n  constructor(container) {\n    let content = ` <label id=\"alert-message\" class=\"text popup-data\"></label>`;\n    super('message-popup', '3D Model', content, container);\n  }\n\n  init() {\n    this.message = $(`#alert-message`)[0];\n  }\n\n  showContent(message) {\n    this.message.textContent = message;\n  }\n\n}\n/**************************************************************************\nModel Information popup Dialog\n \n */\n\n\nclass ModelPopup extends InfoPopup {\n  /**\n   * Creates an instance of Model Detail Popup.  \n   *\n   * @constructor\n   */\n  constructor(container, title = 'GCA model') {\n    let content = ` <label for=\"model-name\" class=\"label\" >Name:</label>\n\t\t\t\t\t\t<label id=\"model-name\" class=\"text popup-data\"></label>\n\t\t\t\t\t\t<p/>\n\t\t\t\t\t\t<label class=\"label\">Version:</label>\n\t\t\t\t\t\t<label id=\"model-version\" class=\"text popup-data\"></label>\n\t\t\t\t\t\t<p/>\n\t\t\t\t\t\t<label class=\"label\">Species:</label>\n\t\t\t\t\t\t<label id=\"model-species\" class=\"text popup-data\"></label>\n\t\t\t\t\t\t<p/>\n\n\t\t\t\t\t\t<label class=\"label\">Owner:</label>\n\t\t\t\t\t\t<label id=\"model-owner\" class=\"text popup-data\"></label>\n\t\t\t\t\t\t<p/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<label class=\"label\">Description:</label>\n\t\t\t\t\t\t<label id=\"model-desc\" class=\"text popup-data\"></label>\n\t\t\t\t\t\t<p/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<label class=\"label\">Contact:</label>\n\t\t\t\t\t\t<a id=\"model-contact\" href=\"\"></a>\n\t\t\t\t\t\t<label id=\"model-contact\" class=\"text popup-data\"></label>`;\n    super('model-popup', title, content, container);\n  }\n\n  open(item, target = null, onclose = null) {\n    this.setDialogTitle('GCA ' + (item.type ? item.type : '') + ' Model');\n    super.open(item, target, onclose);\n  }\n\n  init() {\n    this.name = $(`#model-name`)[0];\n    this.version = $(`#model-version`)[0];\n    this.desc = $(`#model-desc`)[0];\n    this.owner = $(`#model-owner`)[0];\n    this.species = $(`#model-species`)[0];\n    this.contact = $(`#model-contact`)[0];\n  }\n\n  showContent(model) {\n    this.name.textContent = model.name;\n    this.version.textContent = model.version;\n    this.desc.textContent = model.description || model.name;\n    this.owner.textContent = model.owner;\n    this.species.textContent = model.species;\n    this.contact.href = 'mailto:' + model.contact;\n    this.contact.textContent = model.contact;\n  }\n\n}\n\n//# sourceURL=webpack://GCA_1DViewer/./src/modules/GCA_Utilities/src/GCA_Dialogs.js?");

/***/ }),

/***/ "./src/modules/GCA_Utilities/src/GCA_Utilities.js":
/*!********************************************************!*\
  !*** ./src/modules/GCA_Utilities/src/GCA_Utilities.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Sidebar\": () => (/* binding */ Sidebar),\n/* harmony export */   \"Utility\": () => (/* binding */ Utility),\n/* harmony export */   \"capitalizeFirst\": () => (/* binding */ capitalizeFirst),\n/* harmony export */   \"clamp\": () => (/* binding */ clamp),\n/* harmony export */   \"getCurrentScriptPath\": () => (/* binding */ getCurrentScriptPath)\n/* harmony export */ });\n/**\n * @module Utility\n * @author Mehran Sharghi\n * @export Utility, ViewTransform, clamp, capitalizeFirst\n * This module conatins a set of ustility clases and functions that are used by various part of the GCA 1D model viewer. \n */\nconst CORS_Allowed = true;\n\n\nlet clamp = (val, b1, b2) => b1 < b2 ? val < b1 ? b1 : val > b2 ? b2 : val : val < b2 ? b2 : val > b1 ? b1 : val;\n\nlet capitalizeFirst = string => string.toLowerCase().replace(/(^\\w|\\s\\w)/g, m => m.toUpperCase()); // Get the current script file path\n\n\nlet getCurrentScriptPath = function (level = 0) {\n  // Get the current script file location \n  let location = new Error().stack.split('\\n')[1].split('@').pop();\n  let lastIndex = location.lastIndexOf('/');\n  let path = '';\n\n  if (lastIndex > 0) {\n    path = location.substr(0, lastIndex);\n  }\n\n  while (level > 0 && lastIndex > 0) {\n    lastIndex = path.lastIndexOf('/', lastIndex);\n\n    if (lastIndex > 0) {\n      path = path.substr(0, lastIndex);\n    }\n\n    level--;\n  }\n\n  return path;\n};\n/** @class Utility encapsulates a set of static utility functions */\n\n\nclass Utility {\n  static condenseText(text, width) {\n    let str = text.text();\n\n    if (text.length() > width) {\n      text.attr('word-spacing', '-1px');\n\n      if (text.length() > width) {\n        text.attr('letter-spacing', '0px');\n\n        if (text.length() > width) {\n          text.attr('letter-spacing', '-0.2px');\n          let i = 0;\n\n          while (text.length() > width) {\n            if (i > str.length / 4) {\n              return false;\n            }\n\n            str = str.substr(0, str.length - 1);\n            text.text(str);\n            i++;\n          }\n        }\n      }\n    }\n\n    return true;\n  }\n\n  static relativePos(e, isGroup = false) {\n    let target = e.target || e.srcElement;\n\n    if (isGroup) {\n      target = target.parentNode || target.parentElement;\n    }\n\n    let box = target.getBoundingClientRect();\n    return {\n      x: e.clientX - box.left - 1,\n      y: e.clientY - box.top - 1\n    };\n  } // checks for single click & double clicks and calls the appropriate callback \n\n\n  static handleClicks(singleClickCallback, doubleClickCallback, ...args) {\n    if (!Utility.clickTimer) {\n      Utility.clickTimer = setTimeout(function () {\n        singleClickCallback(...args);\n        Utility.clickTimer = null;\n        let k = 5;\n      }, 200);\n    } else {\n      clearTimeout(Utility.clickTimer);\n      Utility.clickTimer = null;\n      doubleClickCallback(...args);\n    }\n  }\n\n  static colorBlend(col1, col2, p = 0.5) {\n    let usePound = false;\n\n    if (col1[0] == \"#\") {\n      col1 = col1.slice(1);\n      usePound = true;\n    }\n\n    if (col2[0] == \"#\") {\n      col2 = col2.slice(1);\n    }\n\n    let num2 = parseInt(col2, 16);\n    let p2 = 1 - p;\n    let r2 = clamp(Math.round((num2 >> 16) * p2), 0, 255);\n    let g2 = clamp(Math.round((num2 >> 8 & 0x00FF) * p2), 0, 255);\n    let b2 = clamp(Math.round((num2 & 0x0000FF) * p2), 0, 255);\n    let num1 = parseInt(col1, 16);\n    let r = clamp(Math.round((num1 >> 16) * p + r2), 0, 255);\n    r = (r < 16 ? '0' : '') + r.toString(16);\n    let g = clamp(Math.round((num1 >> 8 & 0x00FF) * p + g2), 0, 255);\n    g = (g < 16 ? '0' : '') + g.toString(16);\n    let b = clamp(Math.round((num1 & 0x0000FF) * p + b2), 0, 255);\n    b = (b < 16 ? '0' : '') + b.toString(16);\n    return (usePound ? '#' : '') + r + g + b;\n  }\n\n  static colorShade(col, shade) {\n    let usePound = false;\n\n    if (col[0] == \"#\") {\n      col = col.slice(1);\n      usePound = true;\n    }\n\n    let num = parseInt(col, 16);\n    let r = clamp(Math.round((num >> 16) * shade), 0, 255);\n    r = (r < 16 ? '0' : '') + r.toString(16);\n    let g = clamp(Math.round((num >> 8 & 0x00FF) * shade), 0, 255);\n    g = (g < 16 ? '0' : '') + g.toString(16);\n    let b = clamp(Math.round((num & 0x0000FF) * shade), 0, 255);\n    b = (b < 16 ? '0' : '') + b.toString(16);\n    return (usePound ? '#' : '') + r + g + b;\n  }\n\n  static addElement(parent, tag, id, className, prepend = false) {\n    let element = document.createElement(tag);\n    element.id = id;\n\n    if (prepend) {\n      parent.prepend(element);\n    } else {\n      parent.append(element);\n    }\n\n    if (className) {\n      element.className = className;\n    }\n\n    return element;\n  }\n  /*\n    @param {String} HTML representing any number of sibling elements\n    @return {NodeList} \n   */\n\n\n  htmlToElems(html) {\n    let temp = document.createElement('template');\n    temp.innerHTML = html;\n    return temp.content.childNodes;\n  }\n\n  static addStyle(selector, rules) {\n    let style = document.createElement('style');\n    style.type = 'text/css';\n    document.getElementsByTagName('head')[0].appendChild(style);\n    if (!(style.sheet || {}).insertRule) (style.styleSheet || style.sheet).addRule(selector, rules);else style.sheet.insertRule(selector + \" {\" + rules + \"}\", 0);\n    return style.sheet.rules[0];\n  }\n\n  static getStyle(selector) {\n    for (let styleSheet of document.styleSheets) {\n      let rules = styleSheet.rules || styleSheet.cssRules;\n\n      for (let rule of rules) {\n        if (rule.style === selector) {\n          return rule;\n        }\n      }\n    }\n  }\n\n  static htmlToElem(html) {\n    let temp = document.createElement('template');\n    html = html.trim(); // Never return a space text node as a result\n\n    temp.innerHTML = html;\n    return temp.content.firstChild;\n  }\n\n  static innerDimensions = element => {\n    // gives the content dimensions\n    let computedStyle = getComputedStyle(element);\n    let height = element.clientHeight; // height with padding\n\n    let width = element.clientWidth; // width with padding\n\n    height -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n    height -= parseFloat(computedStyle.marginTop) + parseFloat(computedStyle.marginBottom);\n    width -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n    width -= parseFloat(computedStyle.marginLeft) + parseFloat(computedStyle.marginRight);\n    return {\n      height,\n      width\n    };\n  };\n  static innerHeight = element => {\n    let computedStyle = getComputedStyle(element);\n    let height = element.clientHeight; // height with padding\n\n    height -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n    height -= parseFloat(computedStyle.marginTop) + parseFloat(computedStyle.marginBottom);\n    return height;\n  };\n  static innerWidth = element => {\n    let computedStyle = getComputedStyle(element);\n    let width = element.clientWidth; // width with padding\n\n    width -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n    width -= parseFloat(computedStyle.marginLeft) + parseFloat(computedStyle.marginRight);\n    return width;\n  };\n\n  static fetchShim() {\n    if (!CORS_Allowed || navigator.userAgent.indexOf('Chrome') == -1) //a hack to fix local file fetch in chrome \t\t\n      return;\n\n    if (/^file:\\/\\/\\//.test(location.href)) {\n      let path = './';\n      let orig = fetch;\n\n      window.fetch = resource => /^[^/:]*:/.test(resource) ? orig(resource) : new Promise(function (resolve, reject) {\n        let request = new XMLHttpRequest();\n\n        let fail = error => {\n          reject(error);\n        };\n\n        ['error', 'abort'].forEach(event => {\n          request.addEventListener(event, fail);\n        });\n\n        let pull = expected => new Promise((resolve, reject) => {\n          if (request.responseType == expected || expected == 'text' && !request.responseType) resolve(request.response);else reject(request.responseType);\n        });\n\n        request.addEventListener('load', () => resolve({\n          arrayBuffer: () => pull('arraybuffer'),\n          blob: () => pull('blob'),\n          text: () => pull('text'),\n          json: () => pull('json')\n        }));\n        request.open('GET', resource.replace(/^\\//, path));\n        request.send();\n      });\n    }\n  }\n\n  static loadJson(url) {\n    let obj = undefined;\n    let req = new XMLHttpRequest();\n    req.open('GET', url, false);\n    req.overrideMimeType(\"text/html\"); //\t\treq.overrideMimeType( 'application/json');\n\n    req.send(null);\n\n    if (req.status === 200) {\n      obj = JSON.parse(req.responseText);\n    }\n\n    return obj;\n  } // Get the current script file location \n\n\n  static getCurrentScriptLocation() {\n    return new Error().stack.split('\\n')[1].split('@').pop();\n  } // Get the current script file path\n\n\n  static getCurrentScriptPath(level = 0) {\n    let location = Utility.getCurrentScriptLocation();\n    let lastIndex = location.lastIndexOf('/');\n    let path = '';\n\n    if (lastIndex > 0) {\n      path = location.substr(0, lastIndex);\n    }\n\n    while (level > 0 && lastIndex > 0) {\n      lastIndex = path.lastIndexOf('/', lastIndex);\n\n      if (lastIndex > 0) {\n        path = path.substr(0, lastIndex);\n      }\n\n      level--;\n    }\n\n    return path;\n  }\n\n  static addStylesheet(ref) {\n    if (ref == undefined || ref == null) {\n      return;\n    }\n\n    let link = document.createElement('link');\n    link.rel = \"stylesheet\";\n    link.type = \"text/css\";\n    link.href = ref;\n    document.head.appendChild(link);\n  }\n\n} //===========================================================================\n\n\nclass Sidebar {\n  constructor(container, pos, id, content, width, delay = 0.5) {\n    this.collapsedWidth = '6px';\n    this.id = id;\n    this.container = container;\n    this.position = pos.trim().toLowerCase();\n    this.content = content;\n    this.width = typeof width === 'number' ? width + 'px' : width;\n    this.isCollapsed = true;\n    this.sidebar = Utility.htmlToElem(`<div id=\"${this.id}\" class=\"sidebar\"><div id=\"${this.id}_wrapper\"> ${this.content}</div></div>`);\n    this.sidebar.onmouseenter = this.open.bind(this);\n    this.sidebar.onmouseleave = this.close.bind(this);\n    this.container.appendChild(this.sidebar);\n    this.wrapper = document.getElementById(`${this.id}_wrapper`);\n    this.sidebar.style.width = this.width;\n    this.sidebar.style.opacity = \"0\";\n    this.delay = delay;\n    this.posDelay = ` ${this.delay}s`;\n\n    switch (this.position) {\n      case 'left':\n        this.sidebar.style.right = `calc(100% - ${this.collapsedWidth})`;\n        break;\n\n      case 'right':\n        this.sidebar.style.left = `calc(100% - ${this.collapsedWidth})`;\n        break;\n    }\n\n    this.isActive = true;\n  }\n\n  toggleSidebar1() {\n    if (this.isCollapsed) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  setSidebarCollapse(collapse) {\n    // true/false\n    if (!this.isActive) {\n      return;\n    }\n\n    let pos = collapse ? `calc(100% - ${this.collapsedWidth})` : `calc(100% - ${this.width})`;\n\n    switch (this.position) {\n      case 'left':\n        this.sidebar.style.transition = 'right' + this.posDelay;\n        this.sidebar.style.right = pos;\n        break;\n\n      case 'right':\n        this.sidebar.style.transition = 'left' + this.posDelay;\n        this.sidebar.style.left = pos;\n        break;\n    }\n\n    this.sidebar.style.transition += collapse ? `, opacity ${2 * this.delay}s` : `, opacity 0s`;\n    this.sidebar.style.opacity = collapse ? '0' : '0.8';\n    this.isCollapsed = collapse;\n  }\n\n  open() {\n    if (this.onopen) {\n      this.onopen();\n    }\n\n    this.setSidebarCollapse(false);\n  }\n\n  close() {\n    if (this.onclose) {\n      this.onclose();\n    }\n\n    this.setSidebarCollapse(true);\n  }\n\n  hold() {\n    this.sidebar.onmouseenter = this.sidebar.onmouseleave = null;\n  }\n\n  unhold() {\n    this.sidebar.onmouseenter = this.open.bind(this);\n    this.sidebar.onmouseleave = this.close.bind(this);\n  }\n\n  setActive(status) {\n    if (!status && !this.isCollapsed) {\n      this.toggleSidebar();\n    }\n\n    this.isActive = status;\n  }\n\n  setOnopen(onopen) {\n    this.onopen = onopen;\n  }\n\n  setOnclose(onclose) {\n    this.onclose = onclose;\n  }\n\n}\n\n//# sourceURL=webpack://GCA_1DViewer/./src/modules/GCA_Utilities/src/GCA_Utilities.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/modules/GCA_Utilities.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});